//--------------------------------运算符---------------------------------------//
/*关系运算符\:
(> < == >= <= !=)一般用于条件判断或循环语句
逻辑运算符：
&& 逻辑与 两个条件都为真，则是真
if（a>b && a<c）  //if(b<a<c)错误
|| 逻辑或   两个条件至少一个为真，结果为真
if（（a>b） || (b<c)）

*/

//--------------------------------位运算-------------------------------------//
/*十进制转二进制   除二求余 低就是高

原码： 将一个整数，转换成二进制，就是其原码
如单字节的5的原码为： 0000 0101； -5的原码为1000 0101（高位制一）

反码：正数的反码就是其原码， 负数的反码是将其原码中，除符号位以外，每一位取反
如 5的反码为 0000 0101 -5的反码为 1111 1010

补码：正数的补码就是其原码， 负数的反码加 1 就是其补码
如 5的补码为 0000 0101  -5的补码为 1111 1011

在计算机中，正数是直接用原码表示的，如单字节5，在计算机中就表示为 0000 0101
负数用补码表示 1111 1011

无论是正数还是负数，编译系统都是按照内存中储存的内容进行位运算
*/

#include <stido.h>
int main()
{
    printf("%x\n",-5);
    return 0;
}
// 1000 0000 0000 0000 0000 0000 0000 0101 原码
// 1111 1111 1111 1111 1111 1111 1111 1010 反码
// 1111 1111 1111 1111 1111 1111 1111 1011 补码 
   FF FF FF FB