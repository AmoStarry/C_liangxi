//----------------------------------数据类型转换------------------------------------------//
/*自动转换规则：  由编译系统自动完成
占用内存数少的类型，向占用内存字节数多的类型转换以保证不降低精度
1.当表达式中出现了 char short int int类型中的一种或者多种，没有其他类型了参加运算的成员全部变成int类型参加运算，结果也是int类型
2.当表达式中出现了带小数点的实数，参加运算的成员全部变成double 类型参加运算，结果也是double型
3. 当表达式中有有符号数 也有无符号数，参加运算的成绩变成无符号参加运算，结果也是无符号数
4.在赋值语句中等号右边的类型自动转化为等号左边的类型
5.注意自动类型转换都是在运算的过程中进行临时性的转换，并不会影响自动类型转换的变量的值和类型

强制转换： 通过类型转换运算来实现
（类型说明）（表达式）
（float）a； //把a的值转换为实型
（int）(x+y); //把x+y的结果值转换为整型 
注意：类型说明符必须加符号
无论是强制或是自动转换，都只是为了本次运算的需要，而对变量的数据长度进行临时性转换，而不是改变数据定义的类型以及它的值
*/
#include <stdio.h>
int main()
{
    float x=0;
    int i=0;
    x=3.6f;
    i=(int)x;
    printf("x=%d\n",i);
    printf("x=%f\n",x);    return 0;

}
